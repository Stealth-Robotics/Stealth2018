// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4089.Stealth2018.subsystems;

import org.usfirst.frc4089.Stealth2018.RobotMap;
import org.usfirst.frc4089.Stealth2018.commands.*;

import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import edu.wpi.first.wpilibj.CounterBase.EncodingType;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.PIDSourceType;
import edu.wpi.first.wpilibj.RobotDrive;

import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;


/**
 *
 */
public class Drive extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final WPI_TalonSRX sRX1DriveLR = RobotMap.driveSRX1DriveLR;
    private final WPI_TalonSRX sRX2DriveLF = RobotMap.driveSRX2DriveLF;
    private final WPI_TalonSRX sRX3DriveRR = RobotMap.driveSRX3DriveRR;
    private final WPI_TalonSRX sRX4DriveRF = RobotMap.driveSRX4DriveRF;
    private final RobotDrive robotDrive41 = RobotMap.driveRobotDrive41;
    private final Encoder quadEncLeftDrive = RobotMap.driveQuadEncLeftDrive;
    private final Encoder quadEncRightDrive = RobotMap.driveQuadEncRightDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    /**
     * 
     * @param speed -1.0 (reverse) : 1.0 (forward) 
     * @param rotation -1.0 (counter clockwise) : 1.0 (clockwise)
     */
    public void arcDrive (double speed, double rotation) {
       	robotDrive41.arcadeDrive(speed, rotation);
    }
    
    public void drive (double leftSpeed, double rightSpeed, boolean squaredInputs) {
    	robotDrive41.tankDrive(leftSpeed, rightSpeed, squaredInputs);
    }
}

