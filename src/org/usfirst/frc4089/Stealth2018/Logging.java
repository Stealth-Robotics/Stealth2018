// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4089.Stealth2018;

import edu.wpi.cscore.UsbCamera;
import edu.wpi.first.wpilibj.CameraServer;
import edu.wpi.first.wpilibj.DriverStation;
import edu.wpi.first.wpilibj.TimedRobot;
import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.command.Scheduler;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.smartdashboard.SendableChooser;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

import java.io.FileWriter;
import java.io.IOException;

import org.usfirst.frc4089.Stealth2018.MPPaths.Path;
import org.usfirst.frc4089.Stealth2018.autoCommands.*;
import org.usfirst.frc4089.Stealth2018.commands.*;
import org.usfirst.frc4089.Stealth2018.subsystems.*;

import com.ctre.phoenix.sensors.PigeonIMU;

/**
 * The VM is configured to automatically run this class, and to call the
 * functions corresponding to each mode, as described in the TimedRobot
 * documentation. If you change the name of this class or the package after
 * creating this project, you must also update the build.properties file in 
 * the project.
 */
public class Logging extends TimedRobot {
	
	private FileWriter LogFile;
	
	public Logging() {
		try {
			LogFile = new FileWriter("/home/lvuser/PowerUpLogging.csv", true);
		} catch(IOException e) {
			e.printStackTrace();
	        System.out.println("Unable to create/find FileWriter");
	    }
	}
	
	public void Log() {
		PigeonIMU.FusionStatus fusionStatus = new PigeonIMU.FusionStatus();
    	RobotMap.pigeonIMU.getFusedHeading(fusionStatus);
		
		try {
			//Mode, System Time, Match Time, Event Name, Match Number, Alliance, Replay Number, Battery Voltage, Game Message, Elevator Position, Elevator Target, Picker Elevator Position, Picker Elevator Target, Heading
			LogFile.write(Robot.CurrentMode + "," +
					Timer.getFPGATimestamp() + "," +
					Timer.getMatchTime() + "," +
					DriverStation.getInstance().getEventName() + "," +
					DriverStation.getInstance().getMatchNumber() + "," +
					DriverStation.getInstance().getAlliance() + "," +
					DriverStation.getInstance().getReplayNumber() + "," +
					DriverStation.getInstance().getBatteryVoltage() + "," +
					DriverStation.getInstance().getGameSpecificMessage() + "," +
					RobotMap.elevatorMotor.getSelectedSensorPosition(0) + "," +
					Robot.elevator.GetElevatorTarget() + "," +
					RobotMap.pickerElevatorMotor.getSelectedSensorPosition(0) + "," +
					Robot.elevator.GetPickerElevatorTarget() + "," +
					fusionStatus.heading + "\n"
					);
		} catch(IOException e) {
			e.printStackTrace();
	        System.out.println("Unable to write to FileWriter");
	    }
	}
}
